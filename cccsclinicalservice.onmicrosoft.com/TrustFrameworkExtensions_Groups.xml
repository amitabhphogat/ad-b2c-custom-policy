<?xml version="1.0" encoding="utf-8"?>
<TrustFrameworkPolicy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06" PolicySchemaVersion="0.3.0.0" 
  TenantId="cccsclinicalservice.onmicrosoft.com" 
  PolicyId="B2C_1A_Demo_TrustFrameworkExtensions_Groups" 
  PublicPolicyUri="http://cccsclinicalservice.onmicrosoft.com/B2C_1A_Demo_TrustFrameworkExtensions_Groups">

  <BasePolicy>
    <TenantId>cccsclinicalservice.onmicrosoft.com</TenantId>
    <PolicyId>B2C_1A_TrustFrameworkExtensions</PolicyId>
  </BasePolicy>

  <BuildingBlocks>
    <ClaimsSchema>
      <ClaimType Id="groups">
        <DisplayName>Collection of group membership IDs</DisplayName>
        <DataType>stringCollection</DataType>
      </ClaimType>
      <ClaimType Id="group_1">
        <DisplayName>Group 1</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="group_2">
        <DisplayName>Group 2</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="group_3">
        <DisplayName>Group 3</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
       <ClaimType Id="role">
        <DisplayName>Role to Check</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="userExists">
        <DisplayName>User Exists in Clinical Service Identity system</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="isMemberOfAllowGroup">
      	<DisplayName>isMemberOfAllowGroup</DisplayName>
      	<DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="identityProviderAccessToken">
        <DisplayName>Identity Provider Access Token</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Stores the access token of the identity provider.</AdminHelpText>
      </ClaimType>
      <ClaimType Id="identityProviderRefreshToken">
        <DisplayName>Identity provider refresh token</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="grant_type">
        <DisplayName>Grant type</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="scope">
        <DisplayName>scope</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="bearerToken">
        <DisplayName>Bearer token</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="responseMsg">
      	<DisplayName>Error</DisplayName>
      	<DataType>string</DataType>
      	<UserInputType>Paragraph</UserInputType>
      </ClaimType>
    </ClaimsSchema>

    <ClaimsTransformations>
      <ClaimsTransformation Id="AddGroup_1" TransformationMethod="AddItemToStringCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="group_1" TransformationClaimType="item" />
          <InputClaim ClaimTypeReferenceId="groups" TransformationClaimType="collection" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="groups" TransformationClaimType="collection" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="AddGroup_2" TransformationMethod="AddItemToStringCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="group_2" TransformationClaimType="item" />
          <InputClaim ClaimTypeReferenceId="groups" TransformationClaimType="collection" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="groups" TransformationClaimType="collection" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="AddGroup_3" TransformationMethod="AddItemToStringCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="group_3" TransformationClaimType="item" />
          <InputClaim ClaimTypeReferenceId="groups" TransformationClaimType="collection" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="groups" TransformationClaimType="collection" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CheckIfMemberOfAllowGroup" TransformationMethod="StringCollectionContainsClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="groups" TransformationClaimType="collection"/>
          <InputClaim ClaimTypeReferenceId="role" TransformationClaimType="item" />
        </InputClaims>
        <InputParameters>
          <InputParameter  Id="ignoreCase" DataType="string" Value="true"/>
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isMemberOfAllowGroup" TransformationClaimType="outputClaim"/>
        </OutputClaims>
      </ClaimsTransformation>      
    </ClaimsTransformations>
  </BuildingBlocks>

  <ClaimsProviders>  
    <ClaimsProvider>
      <Domain>conduent.onmicrosoft</Domain>
      <DisplayName>Login using Conduent login</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="AADConduent-OpenIdConnectGroups">
          <DisplayName>Clinical Services Employee</DisplayName>
          <Description>Login with your Conduent account</Description>
          <Protocol Name="OpenIdConnect"/>
          <Metadata>
            <Item Key="METADATA">https://login.microsoftonline.com/1aed4588-b8ce-43a8-a775-989538fd30d8/v2.0/.well-known/openid-configuration</Item>
            <Item Key="client_id">4dea137d-d29b-4908-9d66-3ea2ac868fd4</Item>
            <Item Key="response_types">code</Item>
            <Item Key="scope">openid profile user.read</Item>
            <Item Key="response_mode">form_post</Item>
            <Item Key="HttpBinding">POST</Item>
            <Item Key="UsePolicyInRedirectUri">false</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="client_secret" StorageReferenceId="B2C_1A_ConduentAADSecret"/>
          </CryptographicKeys>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="oid"/>
            <OutputClaim ClaimTypeReferenceId="tenantId" PartnerClaimType="tid"/>
            <OutputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="given_name"/>
            <OutputClaim ClaimTypeReferenceId="surName" PartnerClaimType="family_name"/>            
            <OutputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="name"/>
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="socialIdpAuthentication" AlwaysUseDefaultValue="true"/>
            <OutputClaim ClaimTypeReferenceId="identityProvider" PartnerClaimType="iss"/>
            <OutputClaim ClaimTypeReferenceId="sub" PartnerClaimType="sub"/>
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="email" />
            <OutputClaim ClaimTypeReferenceId="userPrincipalName" />
            <OutputClaim ClaimTypeReferenceId="identityProviderAccessToken" PartnerClaimType="{oauth2:access_token}" />
            <OutputClaim ClaimTypeReferenceId="identityProviderRefreshToken" PartnerClaimType="{oauth2:refresh_token}" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CreateRandomUPNUserName"/>
            <OutputClaimsTransformation ReferenceId="CreateUserPrincipalName"/>
            <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId"/>
            <OutputClaimsTransformation ReferenceId="CreateSubjectClaimFromAlternativeSecurityId"/>            
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-SocialLogin"/>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
    <ClaimsProvider>
      <DisplayName>Graph REST APIs</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="REST-AcquireAccessTokenForGraph">
          <DisplayName>Acquire Token</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">https://login.microsoftonline.com/cccsclinicalservice.onmicrosoft.com/oauth2/v2.0/token</Item>
            <Item Key="AuthenticationType">Basic</Item>
            <Item Key="SendClaimsIn">Form</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="BasicAuthenticationUsername" StorageReferenceId="B2C_1A_MSGraphClientId" />
            <Key Id="BasicAuthenticationPassword" StorageReferenceId="B2C_1A_MSGraphClientSecret" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="grant_type" DefaultValue="client_credentials" />
            <InputClaim ClaimTypeReferenceId="scope" DefaultValue="https://graph.microsoft.com/.default" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="bearerToken" PartnerClaimType="access_token" />
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <!-- Call Microsoft Graph API to get group claims-->
        <TechnicalProfile Id="REST-GetGroupMembership">
          <DisplayName>Get user's groups using Graph API</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">https://graph.microsoft.com/v1.0/users/{objectId}/transitiveMemberOf?$select=id,displayName</Item>
            <Item Key="SendClaimsIn">Url</Item>
            <Item Key="AuthenticationType">Bearer</Item>
            <Item Key="UseClaimAsBearerToken">bearerToken</Item>
            <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
            <Item Key="ClaimResolverUrlFormatting">true</Item>
            <Item Key="ResolveJsonPathsInJsonTokens">true</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" /> 
            <InputClaim ClaimTypeReferenceId="bearerToken" /> 
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="group_1" DefaultValue="" PartnerClaimType="value[0].displayName" />
            <OutputClaim ClaimTypeReferenceId="group_2" DefaultValue="" PartnerClaimType="value[1].displayName" />
            <OutputClaim ClaimTypeReferenceId="group_3" DefaultValue="" PartnerClaimType="value[2].displayName" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="AddGroup_1" />
            <OutputClaimsTransformation ReferenceId="AddGroup_2" />
            <OutputClaimsTransformation ReferenceId="AddGroup_3" />
            <OutputClaimsTransformation ReferenceId="CheckIfMemberOfAllowGroup" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="ShowBlockPage">
          <DisplayName>Show Block message</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
            <Item Key="setting.showContinueButton">false</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="responseMsg" DefaultValue="You are not a member of a required security group." />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="responseMsg" />
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
    <ClaimsProvider>
      <DisplayName>Clinical Management API</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="REST-GetUserGroup">
          <DisplayName>Check loyaltyId Azure Function web hook</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <!-- Set the ServiceUrl with your own REST API endpoint -->
            <Item Key="ServiceUrl">https://clinical-api-dev.services.conduent.com/Management/api/users/groups?p={email}</Item>
            <Item Key="SendClaimsIn">Url</Item>
            <Item Key="AuthenticationType">Bearer</Item>
            <Item Key="UseClaimAsBearerToken">identityProviderAccessToken</Item>
            <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
            <Item Key="ClaimResolverUrlFormatting">true</Item>
            <Item Key="ResolveJsonPathsInJsonTokens">true</Item>
          </Metadata>
          <InputClaims>            
            <InputClaim ClaimTypeReferenceId="email" /> 
            <InputClaim ClaimTypeReferenceId="identityProviderAccessToken" /> 
          </InputClaims>
           <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="userExists" DefaultValue="false" />
            <OutputClaim ClaimTypeReferenceId="groups" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CheckIfMemberOfAllowGroup" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>
  </ClaimsProviders>

</TrustFrameworkPolicy>